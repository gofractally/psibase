name: Generate release notes

on:
  workflow_dispatch:
    inputs:
      starttag:
        description: 'Start tag (e.g. "vX.Y.Z")'
        required: true
      endtag:
        description: 'End tag (e.g. "vX.Y.Z")'
        required: true
  workflow_call:
    inputs:
      endtag:
        required: true
        type: string
    outputs:
      changelog:
        description: "The generated changelog"
        value: ${{ jobs.auto-generate-release-notes.outputs.changelog }}

env:
  CONFIG_JSON: |
            {
              "template": "#{{CHANGELOG}}\n\n## 📦 Uncategorized\n\n#{{UNCATEGORIZED}}\n",
              "pr_template": "- [(PR ##{{NUMBER}})](#{{URL}}) | #{{TITLE}}",
              "categories": [
                {
                    "title": "## 🐛 Fixes",
                    "labels": ["bug"]
                },
                {
                    "title": "## 💻 App development",
                    "labels": ["Dev Experience", "Front-end Infra"]
                },
                {
                    "title": "### 📄 Developer experience docs",
                    "labels": ["Dev Experience", "documentation"],
                    "exhaustive": true
                },
                {
                    "title": "### 📄 Front-end infrastructure docs",
                    "labels": ["Front-end Infra", "documentation"],
                    "exhaustive": true
                },
                {
                    "title": "## 🚀 Default apps",
                    "labels": ["System app"]
                },
                {
                    "title": "### 📄 Docs",
                    "labels": ["System app", "documentation"],
                    "exhaustive": true
                },
                {
                    "title": "## ⚖️ Governance",
                    "labels": ["Governance"]
                },
                {
                    "title": "### 📄 Docs",
                    "labels": ["Governance", "documentation"],
                    "exhaustive": true
                },
                {
                    "title": "## 🏗️ Infrastructure Providers",
                    "labels": ["Node infra"]
                },
                {
                    "title": "### 📄 Docs",
                    "labels": ["Node infra", "documentation"],
                    "exhaustive": true
                }
              ]
            }

jobs:
  prerelease-check:
    name: Prerelease Check
    runs-on: ubuntu-latest
    outputs:
      prerelease: ${{ steps.set-prerelease-var.outputs.prerelease }}
    steps:
      - name: Set prerelease variable
        id: set-prerelease-var
        shell: bash
        run: |
          if [[ ${{ github.event.inputs.endtag }} == *-* ]]; then
              echo prerelease=true >>$GITHUB_OUTPUT
          else
              echo prerelease=false >>$GITHUB_OUTPUT
          fi
      - name: PRERELEASE=${{ steps.set-prerelease-var.outputs.prerelease }}
        id: output
        run: true

  generate-custom-release-notes:
    if: github.event_name == 'workflow_dispatch'
    name: Gen notes ${{ github.event.inputs.starttag }} - ${{ github.event.inputs.endtag }}
    runs-on: ubuntu-latest
    needs:
      - prerelease-check
    steps:
      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          failOnError: true
          fromTag: ${{ github.event.inputs.starttag }}
          toTag: ${{ github.event.inputs.endtag }}
          configurationJson: $CONFIG_JSON
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Write to file
        id: write_changelog_file
        run: |
          echo "${{ steps.build_changelog.outputs.changelog }}" > changelog.md
      - name: Upload changelog
        uses: actions/upload-artifact@v1
        with:
          name: changelog.md
          path: changelog.md


  auto-generate-release-notes:
    if: github.event_name == 'workflow_call'
    name: Gen ${{ github.event.inputs.endtag }} notes
    runs-on: ubuntu-latest
    needs:
      - prerelease-check
    outputs:
      changelog: ${{ steps.build_changelog.outputs.changelog }}
    steps:
      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          failOnError: true
          toTag: ${{ github.event.inputs.endtag }}
          configurationJson: $CONFIG_JSON
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Write to file
        id: write_changelog_file
        run: |
          echo "${{ steps.build_changelog.outputs.changelog }}" > changelog.md
      - name: Upload changelog
        uses: actions/upload-artifact@v1
        with:
          name: changelog.md
          path: changelog.md
