name: On Tag - Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'

jobs:

  build-psibase:
    name: Run Builds
    uses: ./.github/workflows/ubuntu-builder.yml

  prerelease-check:
    name: Prerelease Check
    runs-on: ubuntu-latest
    outputs:
      prerelease: ${{ steps.set-prerelease-var.outputs.prerelease }}
    steps:
      - name: Set prerelease variable
        id: set-prerelease-var
        shell: bash
        run: |
          if [[ ${{ github.ref_name }} == *-* ]]; then
              echo prerelease=true >>$GITHUB_OUTPUT
          else
              echo prerelease=false >>$GITHUB_OUTPUT
          fi
      - name: PRERELEASE=${{ steps.set-prerelease-var.outputs.prerelease }}
        id: output
        run: echo no-op

  create-psibase-release:
    name: Release - ${{github.ref_name}}
    runs-on: ubuntu-latest
    needs:
      - build-psibase
      - prerelease-check
    steps:
      - name: "Build Changelog"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download build artifacts
        uses: actions/download-artifact@v3

      - name: Create new Github Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            psidk-ubuntu-2004/psidk-ubuntu-2004.tar.gz
            psidk-ubuntu-2204/psidk-ubuntu-2204.tar.gz
            psidk-book/psidk-book.tar.gz
          draft: true
          prerelease: ${{needs.prerelease-check.outputs.prerelease}}
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          body_path: ${{ steps.build_changelog.outputs.changelog }}

      - name: update dev-chat
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            ## New Psibase release ðŸŽ‰
            Link: [${{ github.ref_name }}](${{ steps.create_release.outputs.url }})
            Prerelease: ${{needs.prerelease-check.outputs.prerelease}}

  # build-new-CLI-versions:
  #   name: Build new CLI version
  #   needs: create-psibase-release
  #   runs-on: ubuntu-latest
  #   steps:
  #     - env:
  #         GITHUB_TOKEN: ${{ secrets.WORKFLOW_DISPATCHER_TOKEN }}
  #       run: |
  #         version=${{ github.ref_name }}
  #         gh workflow run cli.yml -f version=$version -R ${{ github.repository_owner }}/image-builders

# TODO: Psinode image is still taking the binaries from rolling-release. Needs to be changed to
#       Download the artifacts from the release that I just uploaded to.
