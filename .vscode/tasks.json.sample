{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Full Build",
            "type": "shell",
            "command": "mkdir -p build && cd build && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_DEBUG_WASM=ON -DBUILD_RUST=yes -DBUILD_DOC=yes -DBUILD_JS=yes -DBUILD_NATIVE=yes -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=\"psidk\" .. && make install",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "statusbar": {
                    "label": "$(tools) Full build"
                }
            }
        },
        {
            "label": "Build Services",
            "type": "shell",
            "command": "mkdir -p build && cd build && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_DEBUG_WASM=ON -DBUILD_RUST=yes -DBUILD_DOC=no -DBUILD_JS=no -DBUILD_NATIVE=no -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=\"psidk\" .. && make install",
            "group": {
                "kind": "build"
            },
            "options": {
                "statusbar": {
                    "label": "$(tools) Build services"
                }
            }
        },
        {
            "label": "Launch fresh network",
            "type": "shell",
            "command": "rm -rf psinode_db/data && rm psinode_db/db && rm psinode_db/http*.log; psinode psinode_db",
            "options": {
                "statusbar": {
                    "label": "$(rocket) Launch fresh network",
                }
            }
        },
        {
            "label": "Boot",
            "type": "shell",
            "command": "psibase -a http://psibase.127.0.0.1.sslip.io:8079/ boot --producer myproducer",
            "options": {
                "statusbar": {
                    "label": "$(rocket) Boot",
                }
            }
        },
        {
            "label": "Test service",
            "type": "shell",
            "command": "cd build && psitest ${input:serviceName}-test-debug.wasm -s -r compact",
            "group": {
                "kind": "test",
                "isDefault": false
            },
            "options": {
                "statusbar": {
                    "label": "$(beaker) Test service"
                }
            }
        }
    ],
    "inputs": [
        {
            "id": "testsuite",
            "type": "promptString",
            "default": "[mytestsuite]",
            "description": "Enter test suite key (Example: \"[MyTestSuite]\""
        },
        {
            "id": "serviceName",
            "type": "promptString",
            "default": "NftSys",
            "description": "Enter test name:"
        }
    ]
}
