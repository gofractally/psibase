enable_testing()

function(service name suffix)
    add_executable(${name}${suffix} ${ARGN})
    target_include_directories(${name}${suffix} PUBLIC include)
    target_link_libraries(${name}${suffix} services_system${suffix} services_user${suffix} services_test psibase-service-simple-malloc${suffix} )
    set_target_properties(${name}${suffix} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${ROOT_BINARY_DIR})
    if(TEST_GENERATE_SCHEMA)
        psibase_schema(${name}${suffix})
    endif()
endfunction()

function(add suffix)
    service(TestClock "${suffix}" src/TestClock.cpp)
    service(TestKV "${suffix}" src/TestKV.cpp)
    service(TestMemo "${suffix}" src/TestMemo.cpp)
    service(TestServiceEntry "${suffix}" src/TestServiceEntry.cpp)
    service(TestTable "${suffix}" src/TestTable.cpp)
    service(TestExport "${suffix}" src/TestExport.cpp)
    service(TestImport "${suffix}" src/TestImport.cpp)

    service(AbortService "${suffix}" src/AbortService.cpp)
    service(EmitEvents "${suffix}" src/EmitEvents.cpp)
    service(RemoveCode "${suffix}" src/RemoveCode.cpp)
    service(SubjectiveDb "${suffix}" src/SubjectiveDb.cpp)
    service(NotifyService "${suffix}" src/NotifyService.cpp)
    service(SetWasmConfig "${suffix}" src/SetWasmConfig.cpp)
    service(XSudo "${suffix}" src/XSudo.cpp)
    service(AsRpc "${suffix}" src/AsRpc.cpp)

    set(TEST_GENERATE_SCHEMA 1)
    service(MockCpuLimit "${suffix}" src/MockCpuLimit.cpp)
    service(PSubjectiveService "${suffix}" src/ParallelSubjectiveService.cpp)
    service(CounterService "${suffix}" src/CounterService.cpp)
    service(AsyncQueryService "${suffix}" src/AsyncQueryService.cpp)
    service(SubjectiveCounterService "${suffix}" src/SubjectiveCounterService.cpp)
    service(KeepSocketService "${suffix}" src/KeepSocketService.cpp)
    service(XSocketListService "${suffix}" src/XSocketListService.cpp)
    service(VerifyWithCall "${suffix}" src/VerifyWithCall.cpp)
endfunction(add)

add_library(services_test INTERFACE)
target_include_directories(services_test INTERFACE ../psibase_tests ../psibase_tests/include)

if(DEFINED IS_WASM)
    conditional_add()
endif()

add_subdirectory(test)
add_subdirectory(programs)

set(CMAKE_EXPORT_COMPILE_COMMANDS on)
