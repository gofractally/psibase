package producers:plugin;

interface types {

    variant claim-type {
        pubkey-pem(string),
        generic(claim),
    }

    record producer {
        name: string,
        auth-claim: claim-type,
    }

    record claim {
        verify-service: string,
        raw-data: list<u8>,
    }
}

interface api {
    use types.{producer, claim};
    use host:types/types.{error};

    /// Set the producers for CFT consensus.
    /// This also changes the current consensus mode to CFT (crash fault tolerant).
    /// The keys used in the specified auth claims must 
    set-cft-consensus: func(prods: list<producer>) -> result<_, error>;

    /// Set the producers for BFT consensus.
    /// This also changes the current consensus mode to BFT (byzantine fault tolerant).
    set-bft-consensus: func(prods: list<producer>) -> result<_, error>;

    /// Set the producers for the current consensus mode.
    set-producers: func(prods: list<producer>) -> result<_, error>;
}

world imports {
    import api;
}