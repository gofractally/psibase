package fractals:plugin;

interface admin {

    use host:types/types.{error};


    create-fractal: func(account: string, name: string, mission: string) -> result<_, error>;
    set-schedule: func(guild-slug: string, registration: u32, deliberation: u32, submission: u32, finish-by: u32, interval-seconds: u32) -> result<_, error>;

    start: func(guild-slug: string) -> result<_, error>;
    close-eval: func(guild-slug: string) -> result<_, error>;

}


interface user {
    use host:types/types.{error};

    join: func() -> result<_, error>;
    create-guild: func(display-name: string, slug: string) -> result<_, error>;

    attest: func(guild-slug: string, group-number: u32) -> result<_, error>;
    propose: func(guild-slug: string, group-number: u32, proposal: list<string>) -> result<_, error>;
    get-group-users: func(guild-slug: string, group-number: u32) -> result<list<string>, error>;

    register: func(guild-slug: string) -> result<_, error>;
    unregister: func(guild-slug: string) -> result<_, error>;

    get-proposal: func(guild-slug: string, group-number: u32) -> result<option<list<string>>, error>;
}





world imports {
    import admin;
    import user;
}
