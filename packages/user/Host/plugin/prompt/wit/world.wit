package host:prompt;

/// Calls that are tied to the web platform
interface web {
    use host:common/types.{error};

    /// A helper function that simplifies the process of attaching additional context to a
    ///    prompt. This will store the provided context data, and return a string that can 
    ///    be used as the `context-id` parameter in the `prompt-user` function.
    /// The context data can also be retrieved using `get-context`.
    store-context: func(packed-context: list<u8>) -> string;

    /// Retrieves the context data associated with the specified `context-id` that was stored 
    ///    using the `store-context` function.
    get-context: func(context-id: string) -> result<list<u8>, error>;

    /// Initiates a procedure that intends to display the content at the specified subpath (on
    ///    the caller's subdomain) to the current user.
    ///
    /// If you provide a context_id, then that id will be available to the prompt. This is 
    ///    intended to allow plugins that create user prompts to look up additional context
    ///    relevant for handling the prompt.
    prompt-user: func(subpath: option<string>, context-id: option<string>) -> result<_, error>;
}

world imports {
    import web;
}