package secrets:plugin;

interface api {
    use host:types/types.{error};

    /// Accepts a binary secret of arbitrary length and returns 
    ///   a 20-byte token that can be used to retrieve the decrypted secret
    ///   using `decode-secret`.
    /// 
    /// The encrypted secret is stored server-side, so anyone with access to 
    ///   the decryption token will be able to read the secret.
    encode-secret: func(secret: list<u8>) -> string;

    /// Accepts the token returned by `encode-secret`, and returns the 
    ///   decrypted secret.
    /// Can return an error if the secret does not exist or if the token is 
    ///   invalid.
    decode-secret: func(token: string) -> result<list<u8>, error>;
}

world imports {
    import api;
}
