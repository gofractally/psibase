package token-stream:plugin;

interface api {
    use host:types/types.{error};


    /// Creates a new token stream
    ///
    /// Parameters:
    /// * `half-life-seconds`: Time (in seconds) until half of the total unvested balance is withdrawable
    /// * `token-id`: Token ID to be deposited into the stream.
    create: func(half-life-seconds: u32, token-id: u32) -> result<_, error>;

    /// Deposit into an existing token stream
    ///
    /// Parameters:
    /// * `nft-id`: NFT / Stream ID of stream
    /// * `token-id`: Token ID to be deposited into the stream.
    /// * `amount`: Decimal amount of token to be deposited.
    /// * `memo`: Memo.
    deposit: func(nft-id: u32, token-id: u32, amount: string, memo: string) -> result<_, error>;

    /// Claim vested tokens from a stream
    ///
    /// * Requires holding the stream NFT
    ///
    /// Parameters:
    /// * `nft-id`: NFT / Stream ID of stream
    claim: func(nft-id: u32) -> result<_, error>;

    /// Deletes a token stream
    ///
    /// * Requires holding the stream NFT, entire balance vested + claimed.
    ///
    /// Parameters:
    /// * `nft-id`: NFT / Stream ID of stream
    delete: func(nft-id: u32) -> result<_, error>;

}


world imports {
    import api;
}
