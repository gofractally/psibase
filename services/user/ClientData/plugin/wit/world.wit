package clientdata:plugin;

// Each plugin that depends on the `keyvalue` interface of `clientdata` 
//   will have access to a simple key-value api.
//   The `clientdata` plugin creates a table for each caller plugin, and all reads/writes
//   from that plugin will modify records in that plugin's one and only table.
interface keyvalue {
    /// Gets the value of the record with the specified key.
    /// If the record does not exist, None is returned.
    get: func(key: string) -> option<list<u8>>;

    /// Stores the <key, value> record. 
    /// If a record with the specified key does not exist, it is created.
    /// If a record with the specified key already exists, the value is overwritten.
    set: func(key: string, value: list<u8>);

    /// Deletes the record with the specified key.
    /// If the key does not exist, it does nothing.
    delete: func(key: string);
}

world imports {
    import keyvalue;
}