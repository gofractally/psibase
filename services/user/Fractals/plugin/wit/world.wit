package fractals:plugin;

interface api {

    use host:common/types.{error};


    set-schedule: func(evaluation-type: u32, fractal: string, registration: u32, deliberation: u32, submission: u32, finish-by: u32, interval-seconds: u32, force-delete: bool) -> result<_, error>;
    create-fractal: func(account: string, name: string, mission: string) -> result<_, error>;

    join: func(fractal: string) -> result<_, error>;
    
    close-eval: func(fractal: string, evaluation-type: u32) -> result<_, error>;
 
    
    register: func(evaluation-id: u32) -> result<_, error>;
    unregister: func(evaluation-id: u32) -> result<_, error>;
    attest: func(evaluation-id: u32, group-number: u32) -> result<_, error>;
    propose: func(evaluation-id: u32, group-number: u32, proposal: list<string>) -> result<_, error>;

    get-group-users: func(evaluation-id: u32, group-number: u32) -> result<list<string>, error>;

    get-proposal: func(evaluation-id: u32, group-number: u32) -> result<list<string>, error>;

    start: func(fractal: string, evaluation-type: u32) -> result<_, error>;

}




world imports {
    import api;
}
