package fractals:plugin;

interface admin {

    use host:common/types.{error};


    create-fractal: func(account: string, name: string, mission: string) -> result<_, error>;
    set-schedule: func(evaluation-type: u8, fractal: string, registration: u32, deliberation: u32, submission: u32, finish-by: u32, interval-seconds: u32) -> result<_, error>;
    
    start: func(fractal: string, evaluation-type: u8) -> result<_, error>;
    close-eval: func(evaluation-id: u32) -> result<_, error>;   
    
}


interface user {
    use host:common/types.{error};

    join: func(fractal: string) -> result<_, error>;
    
    attest: func(evaluation-id: u32, group-number: u32) -> result<_, error>;
    propose: func(evaluation-id: u32, group-number: u32, proposal: list<string>) -> result<_, error>;
    register: func(evaluation-id: u32) -> result<_, error>;
    unregister: func(evaluation-id: u32) -> result<_, error>;
    
    get-group-users: func(evaluation-id: u32, group-number: u32) -> result<list<string>, error>;
    get-proposal: func(evaluation-id: u32, group-number: u32) -> result<option<list<string>>, error>;
}





world imports {
    import admin;
    import user;
}
