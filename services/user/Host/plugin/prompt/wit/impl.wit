package host:prompt;

interface api {
    use host:common/types.{error};

    /// The details of a prompt that are necessary for the supervisor to trigger it
    record trigger-details {
        subdomain: string,
        payload: string,
        context-id: option<u32>,
    }

    /// Used by the supervisor app to facilitate the interaction with the user
    /// Also sets the return-payload on the prompt object to ensure it persists and can 
    ///    be queried in `get-return-payload`.
    get-prompt-trigger-details: func(id: string, return-payload: string) -> result<trigger-details, error>;

    /// Used by the supervisor app after it has been notified of prompt completion.
    ///    This retrieves the payload used to return the user to the app from which they came.
    ///    The active prompt is deleted automatically when this is called.
    get-return-details: func(id: string) -> option<string>;
}

world impl {
    include clientdata:plugin/imports;
    include accounts:plugin/imports;
    include host:common/imports;

    export api;
    export web;
}
