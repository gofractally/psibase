package nft-sys:plugin;

// interface service-settings {
//     setServiceSetting(manualDebit: bool)
// }

// interface user-settings {
//     getUserSetting(account: AccountNumber)
// }

interface types {
    type NID = u32;
    type account-number = u64;
}

interface nfts {
    use types.{NID, account-number};

    mint: func(nft-label: string) -> result<_, string>;
    burn: func(nft-id: NID) -> result<_, string>;
    credit: func(nft-id: NID, receiver: account-number, memo: string) -> result<_, string>;
    uncredit: func(nft-id: NID, memo: string) -> result<_, string>;
    debit: func(nft-id: NID, memo: string) -> result<_, string>;
    // getNft: func(nftId: NID) -> result<_, NftRecord>;
    // getNftHolder: func(account: AccountNumber) -> result<_, NftHolderRecord>;
    // getCredRecord: func(nftId: NID) -> result<_, CreditRecord>;
    // exists: func(nftId: NID) -> result<_, bool>;
}

/// An example world for the component to target.
world psibase-plugin {
    // export service-settings;
    // export user-settings;
    export types;
    export nfts;

    import common:plugin/server;
}
