package profiles:plugin;

interface types {
 
    record profile {
        display-name: option<string>,
        bio: option<string>,
        avatar: bool,
    }

    record contact {
        account: string,
        nickname: option<string>,
        email: option<string>,
        phone: option<string>,
    }


}

interface contacts {
    use host:common/types.{error};
    use types.{contact};

    set: func(contact: contact) -> result<_, error>;
    remove: func(account: string) -> result<_, error>;
    get: func() -> result<list<contact>, error>;
}

interface api {
    
    use host:common/types.{error};
    use types.{profile};
    use sites:plugin/types.{file};

    set-profile: func(profile: profile);
    
    upload-avatar: func(file: file) -> result<_, error>;
    remove-avatar: func() -> result<_, error>;

}


world imports {
    import api;
}
