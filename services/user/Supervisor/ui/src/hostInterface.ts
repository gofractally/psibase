import { QualifiedFunctionCallArgs } from "@psibase/common-lib";
import { OriginationData } from "./utils";
import { RecoverableErrorPayload } from "./plugin/errors";

export type Result<T, E> = T | E;

export interface BodyType {
    tag: string;
    val: Uint8Array;
}

export interface PluginPostDetails {
    endpoint: string;
    headers: [string, string][];
    body: BodyType;
}

// This is the host interface exposed to plugins
export interface HostInterface {
    // Interface for the autogenerated proxy package
    syncCall: (args: QualifiedFunctionCallArgs) => any;

    getJson: (endpoint: string) => Result<string, RecoverableErrorPayload>;

    postBytes: (
        request: PluginPostDetails,
    ) => Result<string, RecoverableErrorPayload>;

    postGraphqlGetJson: (
        graphql: string,
    ) => Result<string, RecoverableErrorPayload>;

    // Client interface
    getSenderApp: () => OriginationData;

    getLoggedInUser: () => string | undefined;

    isLoggedIn: () => boolean;

    myServiceAccount: () => string;

    myServiceOrigin: () => string;
}
