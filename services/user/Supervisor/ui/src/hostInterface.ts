import { QualifiedDynCallArgs, QualifiedFunctionCallArgs, QualifiedResourceCallArgs } from "@psibase/common-lib";

import { RecoverableErrorPayload } from "./plugin/errors";
import { OriginationData } from "./utils";

export type Result<T, E> = T | E;

export interface HttpRequest {
    uri: string;
    method: string;
    headers: { key: string; value: string }[];
    body?: BodyType;
}

export interface HttpResponse {
    status: number;
    headers: { key: string; value: string }[];
    body: BodyType;
}

export interface BodyType {
    tag: string;
    val: Uint8Array | string;
}

export interface PluginPostDetails {
    endpoint: string;
    headers: [string, string][];
    body: BodyType;
}

// This is the host interface exposed to plugins
export interface HostInterface {
    // Interface for the autogenerated proxy package
    syncCall: (args: QualifiedFunctionCallArgs) => any;

    syncCallResource: (args: QualifiedResourceCallArgs) => any;

    syncCallDyn: (args: QualifiedDynCallArgs) => any;

    syncSend: (req: HttpRequest) => Result<HttpResponse, RecoverableErrorPayload>;

    getActiveApp(): OriginationData;

    getServiceStack(): string[];

    getRootDomain(): string;
}
